# docker-compose.yml:
services:
  news_chromadb:
    image: chromadb/chroma:latest
    container_name: news_chromadb
    ports:
      - "8012:8000"
    volumes:
      - ./chroma-data:/data
    environment: &env
      - ANONYMIZED_TELEMETRY=False
      - ALLOW_RESET=True
      - IS_PERSISTENT=True
      - CHROMA_SERVER_AUTHN_PROVIDER=${CHROMA_SERVER_AUTHN_PROVIDER}
      - CHROMA_SERVER_AUTHN_CREDENTIALS=${CHROMA_SERVER_AUTHN_CREDENTIALS}
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v2/heartbeat" ]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G

  news_vectorization_worker:
    container_name: news_vectorization_worker
    build:
      context: .
      dockerfile: Dockerfile
    command: python3 -m app.tasks.vectorization_and_news_search_task
    volumes: &app-volumes
      - .:/app
    environment: &app-environment
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB}
      - MONGO_SERVER=${MONGO_SERVER}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_COLLECTION=${MONGO_COLLECTION}
      - CHROMA_HOST=news_chromadb
      - CHROMA_PORT=8000
      - CHROMA_SERVER_AUTHN_PROVIDER=${CHROMA_SERVER_AUTHN_PROVIDER}
      - CHROMA_SERVER_AUTHN_CREDENTIALS=${CHROMA_SERVER_AUTHN_CREDENTIALS}
    depends_on:
      - news_chromadb
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  api_update_worker:
    container_name: news_api_update_worker
    build: .
    command: python3 -m app.tasks.api_update_task
    volumes: *app-volumes
    environment: *app-environment
    depends_on:
      - news_chromadb
    restart: always
    deploy:
      resources:
        limits:
          memory: 500M

networks:
  default:
    external: true
    name: news_cluster_bridge